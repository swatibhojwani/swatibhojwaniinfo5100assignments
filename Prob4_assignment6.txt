Given a target integer target and an integer array A sorted in ascending order, find the index i in A such that A[i] is closest to target. Please write main() method to test your code.

Assumptions:
1.	There can be duplicate elements in the array, and we can return any of the indices with same value.
2.	if A is null or A is empty, throw exception to remind users.

Example:
A = [1, 3, 3, 4], target = 2, return 0 or 1 or 2
A = [0, 1, 5], target = 7, return 2
----------------------------------------------------------------------------------------------------------------------------------------
Solution:

package assignment6;

public class prob4 {
	
	public static void main(String arg[]) {
		int arr[]= {0,1,5};//First test case
		int target=7;
		//int arr[]= {1,3,3,4};//Second Test case
		//int target=2;
		int closestIndex=closestNumber(arr,target);
		System.out.println("Closest index to the given tarbet value is "+closestIndex);
	}

	/**
	 * 
	 * @param inputArr:Given input Array
	 * @param target:Given target value
	 * @return
	 */
	public static int closestNumber(int[] inputArr, int target) {
        if (inputArr == null || inputArr.length == 0) 
            return -1;
        int start = 0;
        int end = inputArr.length - 1;
        while (start + 1 < end) {
            int mid = start + (end - start) / 2;
            if (inputArr[mid] <= target) 
                start = mid;
            else 
                end = mid;
        }
        int left = Math.abs(inputArr[start] - target);
        int right = Math.abs(inputArr[end] - target);
        if (left <= right) {
            return start;
        } 
        return end;
    }

}
